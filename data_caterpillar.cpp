#include "data_caterpillar.h"

namespace
{
    const uint8_t data[] = {
        8, 8,
        7, 0,
        0,
        0x0,
        1,
        0x00, 0x00, 0x0B, 0xBB, 0x00, 0x00, 0x0B, 0xB0,
    0x00, 0x08, 0x80, 0x00, 0x00, 0x87, 0x88, 0x00,
    0x08, 0x78, 0x88, 0x80, 0x08, 0x88, 0x88, 0x80,
    0x00, 0x88, 0x88, 0x00, 0x00, 0x08, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x33, 0x33, 0x00, 0x03, 0x3B, 0xB3, 0x30,
    0x33, 0xBB, 0xBB, 0x33, 0x3B, 0xBB, 0xBB, 0xB3,
    0x3B, 0xBB, 0xBB, 0xB3, 0x33, 0xBB, 0xBB, 0x33,
    0x03, 0x3B, 0xB3, 0x30, 0x00, 0x33, 0x33, 0x00,
    0x03, 0x33, 0x33, 0x30, 0x33, 0xBB, 0xBB, 0xBB,
    0x3B, 0xBB, 0x70, 0xBB, 0x3B, 0xBB, 0xBB, 0xB3,
    0x3B, 0xBB, 0xBB, 0xB3, 0x3B, 0xBB, 0x70, 0xBB,
    0x33, 0xBB, 0xBB, 0xBB, 0x03, 0x33, 0x33, 0x30,
    0x03, 0x33, 0x33, 0x30, 0x33, 0xBB, 0xBB, 0x33,
    0x3B, 0xBB, 0xBB, 0xB3, 0x3B, 0xBB, 0xBB, 0xB3,
    0x3B, 0x7B, 0xB7, 0xB3, 0x3B, 0x0B, 0xB0, 0xB3,
    0x3B, 0xBB, 0xBB, 0xB3, 0x0B, 0xB3, 0x3B, 0xB0,
    0x03, 0x33, 0x33, 0x30, 0xBB, 0xBB, 0xBB, 0x33,
    0xBB, 0x07, 0xBB, 0xB3, 0x3B, 0xBB, 0xBB, 0xB3,
    0x3B, 0xBB, 0xBB, 0xB3, 0xBB, 0x07, 0xBB, 0xB3,
    0xBB, 0xBB, 0xBB, 0x33, 0x03, 0x33, 0x33, 0x30,
    0x0B, 0xB3, 0x3B, 0xB0, 0x3B, 0xBB, 0xBB, 0xB3,
    0x3B, 0x0B, 0xB0, 0xB3, 0x3B, 0x7B, 0xB7, 0xB3,
    0x3B, 0xBB, 0xBB, 0xB3, 0x3B, 0xBB, 0xBB, 0xB3,
    0x33, 0xBB, 0xBB, 0x33, 0x03, 0x33, 0x33, 0x30
    };
}

const uint8_t* getCaterpillarData()
{
    return reinterpret_cast<const uint8_t*>(data);
}
